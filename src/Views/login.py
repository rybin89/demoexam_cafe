# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from src.Controllers.UserController import *
from src.Views.admin_window import Ui_adminWindow,main_admin

class Ui_login(object):
    def setupUi(self, login):
        login.setObjectName("login")
        login.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(login)
        self.centralwidget.setObjectName("centralwidget")
        self.titleLogin = QtWidgets.QTextBrowser(self.centralwidget)
        self.titleLogin.setGeometry(QtCore.QRect(180, 20, 431, 51))
        self.titleLogin.setObjectName("titleLogin")
        self.addLogin = QtWidgets.QTextEdit(self.centralwidget)
        self.addLogin.setGeometry(QtCore.QRect(50, 140, 291, 31))
        self.addLogin.setObjectName("addLogin")
        self.addPassword = QtWidgets.QTextEdit(self.centralwidget)

        self.addPassword.setGeometry(QtCore.QRect(460, 140, 291, 31))
        self.addPassword.setObjectName("addPassword")
        self.loginButton = QtWidgets.QPushButton(self.centralwidget)
        self.loginButton.setGeometry(QtCore.QRect(220, 270, 351, 71))
        self.loginButton.setObjectName("loginButton")
        login.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(login)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName("menubar")
        login.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(login)
        self.statusbar.setObjectName("statusbar")
        login.setStatusBar(self.statusbar)

        self.retranslateUi(login)
        QtCore.QMetaObject.connectSlotsByName(login)

    def retranslateUi(self, login):
        _translate = QtCore.QCoreApplication.translate
        login.setWindowTitle(_translate("login", "Информационная система КАФЕ"))
        self.titleLogin.setHtml(_translate("login", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Open Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Приветсвуем Вас в информационной системе КАФЕ</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Пожалуйста введите свой логи и пароль</p></body></html>"))
        self.addLogin.setHtml(_translate("login", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Open Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.addLogin.setPlaceholderText(_translate("login", "Введите свой логин"))
        self.addPassword.setHtml(_translate("login", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Open Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.addPassword.setPlaceholderText(_translate("login", "Введите свой пароль"))
        self.loginButton.setText(_translate("login", "Войти"))
#         метод обработки кнопки

    def test_buuton(self):
        log = self.addLogin.toPlainText()
        passwd = self.addPassword.toPlainText()
        user = UserController()
        result = user.log_in(log,passwd)
        print(result)
   # метод проверки логина и пароля, и роли
   # если логи и пароль True, то проверяется роль и открывается для РОЛИ окно
    def open_panel(self):
        log = self.addLogin.toPlainText() # переменной log присваивается значение введённое в окно addLogin
        passwd = self.addPassword.toPlainText() # переменной passwd присваивается значение введённое в окно addPassword
        users = UserController() # создаётся объект класса UserController

        if users.log_in(log,passwd):
            if UserController.show(log).role_id.id == 1:
                print("Админ")
            elif UserController.show(log).role_id.id == 2:
                print("Повар")
            else:
                print("Официант")
        else:
            print("Пароль или логин введены не верно")
    # метод окрытия окна
    def panel_admin(self):

        adminWindow = QtWidgets.QMainWindow()
        ui = Ui_adminWindow()
        ui.setupUi(adminWindow)
        adminWindow.show()

#     кнопка
    def pressButton(self):
        self.loginButton.clicked.connect(main_admin)
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    login = QtWidgets.QMainWindow()
    ui = Ui_login()
    ui.setupUi(login)
    login.show()
    ui.pressButton()
    sys.exit(app.exec_())
